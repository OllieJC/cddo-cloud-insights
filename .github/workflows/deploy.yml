name: Build and deploy

on:
  push:
    branches:
      - main
    paths:
      - 'polling/*'

  pull_request:
    paths:
      - 'polling/*'

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        environment: [build, live]
    environment:
      name: ${{ matrix.environment }}
    
    if: (github.ref == 'refs/heads/main' && matrix.environment == 'live') || (matrix.environment == 'build')
    steps:
      - name: GitHub Reference
        run: |
          echo "github.ref: ${{ github.ref }}"
      
      - name: Wait for build if this is live
        if: github.ref == 'refs/heads/main' && matrix.environment == 'live'
        run: |
          sleep 30s
          
      - uses: actions/checkout@v2

      - name: Install PowerShell
        run: |
          if [ -z "$(command -v pwsh)" ]; then
            export $(cat /etc/os-release | grep VERSION_ID | tr -d '"')
            wget -q "https://packages.microsoft.com/config/ubuntu/${VERSION_ID}/packages-microsoft-prod.deb"
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update
            sudo apt-get install -y powershell
          else
            echo "pwsh already installed"
          fi

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11

      - name: Build Lambda
        run: |
          CWD=$(pwd)
          cd ./polling/lambda/
          pwsh build.ps1
          cd $CWD

      - name: Terraform init and validate
        run: |
          CWD=$(pwd)
          cd ./polling/terraform/deployments/prod/
          terraform init -backend=false
          terraform validate
          cd $CWD

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' && matrix.environment == 'live'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && matrix.environment == 'live'
        run: |
          CWD=$(pwd)
          cd ./polling/terraform/deployments/prod/
          terraform init
          terraform apply -auto-approve
          cd $CWD
